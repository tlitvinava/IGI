# Generated by Django 3.2.25 on 2025-05-24 15:36

import autoservice.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тип автомобиля')),
                ('description', models.TextField(blank=True, verbose_name='Описание типа авто')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате +375 (XX) XXX-XX-XX.', regex='^\\+375 \\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}$')], verbose_name='Телефон')),
                ('date_of_birth', models.DateField(validators=[autoservice.models.validate_age], verbose_name='Дата рождения')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО мастера')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта мастера')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате +375 (XX) XXX-XX-XX.', regex='^\\+375 \\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}$')], verbose_name='Телефон')),
                ('schedule', models.TextField(blank=True, verbose_name='Расписание работы')),
            ],
        ),
        migrations.CreateModel(
            name='MasterSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Специализация')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название типа услуги')),
                ('description', models.TextField(blank=True, verbose_name='Описание типа услуги')),
            ],
        ),
        migrations.CreateModel(
            name='SparePartType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Вид запчасти')),
                ('description', models.TextField(blank=True, verbose_name='Описание вида запчасти')),
            ],
        ),
        migrations.CreateModel(
            name='SparePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название запчасти')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена запчасти')),
                ('description', models.TextField(blank=True, verbose_name='Описание запчасти')),
                ('spare_part_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spare_parts', to='autoservice.spareparttype', verbose_name='Вид запчасти')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название услуги')),
                ('description', models.TextField(blank=True, verbose_name='Описание услуги')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Стоимость услуги')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='autoservice.servicetype', verbose_name='Тип услуги')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата заказа')),
                ('notes', models.TextField(blank=True, verbose_name='Дополнительные примечания')),
                ('auto_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='autoservice.autotype', verbose_name='Тип авто')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='autoservice.client', verbose_name='Клиент')),
                ('master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='autoservice.master', verbose_name='Мастер')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='autoservice.service', verbose_name='Услуга')),
                ('spare_parts', models.ManyToManyField(blank=True, related_name='orders', to='autoservice.SparePart', verbose_name='Использованные запчасти')),
            ],
        ),
        migrations.AddField(
            model_name='master',
            name='specializations',
            field=models.ManyToManyField(blank=True, related_name='masters', to='autoservice.MasterSpecialization', verbose_name='Специализации'),
        ),
        migrations.AddField(
            model_name='master',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='master_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
